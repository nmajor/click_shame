NODE_ENV=development DEBUG=express:* ./bin/www

Chrome Extension:
- .gitignore – As we all know, this lets you tell git which files/paths to ignore. Yeoman ships with some sane defaults for this.
- .bowerrc – Simple configuration for bower that you can ignore. By default, it just tells bower where to put downloaded modules.
- .editorconfig – Simple editorconfig for Chrome extensions
- .jshintrc – Configuration for jshint. Yeoman turns a lot of checks on, some of which you might end up wanting to disable, depending on your personal style.
- bower.json – Keeps track of modules downloaded using bower.
- package.json – Generated by npm, this keeps track of your NodeJS modules and their versions.
- Gruntfile.js – Sets up grunt tasks and what they do, such as telling grunt to run LiveReload as part of “grunt debug”, etc. This has good defaults, but you are welcome to edit or create your own tasks.
- test/ – Includes a framework for creating test runners for your code, using Mocha. Lots to love here, if you’re into that, but it’s outside the scope of this post.
- node_modules/ – Self explanatory. Node modules which Yeoman requires go here. Can be ignored by git and regenerated from package.json by running “npm install”.
- app/ – This is your actual Chrome extension
  - bower_components/ – Self explanatory. Downloaded bower components get put here.
  - images/ – Used for your app’s icons (which you should replace with custom icons) as well as any other images you might need in your app
  - scripts/ – All of your app’s custom JS should go here.
  - styles/ – All of your app’s custom CSS (or SCSS if you prefer) should go here.
  - manifest.json – This is the entry point of your extension. It tells Chrome which permissions it needs, what it’s called, which files it includes and where, etc. The docs go - into much more detail on this file.
  - options.html – If you chose to include options when creating the extension, then this file gets used as your options page. Edit as you wish.
  - popup.html – If you chose to include a browser action when creating the extension, then this file gets used as the popup that appears when you click it. Edit as you wish.

Run this to make it update live:
grunt debug


Primary
- Only allow strike post requests from the home page
- Add css tag when the specific address doesnt have strikes but the domain does
- Add a hover tooltip with offending details
- Design home page
- Build home page
- Create an icon

Secondary
- Lock down strike post request to only website and installed chrome extensions
- Submit strike through extension
- Add different css options in extension options



